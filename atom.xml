<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://laoliang.shop</id>
    <title>破站真水</title>
    <updated>2021-03-17T07:23:32.196Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://laoliang.shop"/>
    <link rel="self" href="https://laoliang.shop/atom.xml"/>
    <subtitle>不断的折腾，才能领悟作死的真谛！！！</subtitle>
    <logo>https://laoliang.shop/images/avatar.png</logo>
    <icon>https://laoliang.shop/favicon.ico</icon>
    <rights>All rights reserved 2021, 破站真水</rights>
    <entry>
        <title type="html"><![CDATA[死杠存在Dom型xss漏洞的片段js代码]]></title>
        <id>https://laoliang.shop/post/si-gang-cun-zai-dom-xing-xss-lou-dong-de-pian-duan-js-dai-ma/</id>
        <link href="https://laoliang.shop/post/si-gang-cun-zai-dom-xing-xss-lou-dong-de-pian-duan-js-dai-ma/">
        </link>
        <updated>2021-03-16T10:58:31.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://blog-1305208649.cos.ap-beijing.myqcloud.com/d940a02861b90cf85a32800d32d77dca8b02e074.jpg@1320w_926h.jpg" alt="d940a02861b90cf85a32800d32d77dca8b02e074.jpg@1320w_926h" loading="lazy"></figure>
<pre><code class="language-html">&lt;script&gt;
var pos=document.URL.indexOf(&quot;name=&quot;)+5;
var username = unescape(document.URL.substring(pos,document.URL.length));
var r='&lt;b&gt;'+username+'&lt;/b&gt;'
document.write(r);
&lt;/script&gt;
</code></pre>
<p>第一行和最后一行的<script>和</script>中间是JavaScript的代码</p>
<p>var是声明其变量，也就是相当于指明接下来的就是其变量，此次出现的有其变量pos,username,r；我们从变量pos开始看，Document 对象属性中有URL,而第二行当中有document.URL，也就是返回当前文档的 URL。而indexOf的意思是可返回某个指定的字符串值在字符串中首次出现的位置。下列由https://www.w3school.com.cn/jsref/jsref_indexOf.asp复制粘贴</p>
<pre><code class="language-html">stringObject.indexOf(searchvalue,fromindex)
</code></pre>
<figure data-type="image" tabindex="2"><img src="https://blog-1305208649.cos.ap-beijing.myqcloud.com/clipboard.png" alt="img" loading="lazy"></figure>
<p>而在其中我们可以判断searchvalue值是必须的，而其代码里面是name=,而且省略了fromindex，因为所以科学道理他是从字符串的首字符开始，也就是当前文档的 URL是字符串，从其URL的首字符开始，而其name=是正好是五个字符，也就是将返回'name='后面的传参的参数位置，也就是以数字形式出现</p>
<p>再从变量username</p>
<p>unescape(string)函数可对通过 escape() 编码的字符串进行解码。</p>
<figure data-type="image" tabindex="3"><img src="https://blog-1305208649.cos.ap-beijing.myqcloud.com/clipboard.png" alt="img" loading="lazy"></figure>
<p>escape（）编码是指url编码，unescape也就是将url编码进行解码，而substring() 意思是用于提取字符串中介于两个指定下标之间的字符。而其语法；substring() 方法用于提取字符串中介于两个指定下标之间的字符。</p>
<pre><code class="language-javacript">stringObject.substring(start,stop)
</code></pre>
<figure data-type="image" tabindex="4"><img src="https://blog-1305208649.cos.ap-beijing.myqcloud.com/clipboard.png" alt="img" loading="lazy"></figure>
<p>start位置上是变量pos,也就是其传参参数的初始位置；而其document.URL.length是指当前文档的 url的整体长度，也就是将其截取其传参，然后进行url解码；而下面的变量r的值就是其<b>+传参的值+</b></p>
<p>然后特别注意的是其document.write也就是引发的罪魁祸首，他是在文档中输出 ，不管是页面，还是网页前端代码都会输出其传参</p>
<figure data-type="image" tabindex="5"><img src="https://blog-1305208649.cos.ap-beijing.myqcloud.com/clipboard.png" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="6"><img src="https://blog-1305208649.cos.ap-beijing.myqcloud.com/clipboard.png" alt="img" loading="lazy"></figure>
<p>让其标签风格弹窗——</p>
<figure data-type="image" tabindex="7"><img src="https://blog-1305208649.cos.ap-beijing.myqcloud.com/clipboard.png" alt="img" loading="lazy"></figure>
<p>如果一旦发现documen.write属性一般即有可能存在其dom型xss</p>
<p>后期将会连续更新——</p>
]]></content>
    </entry>
</feed>